'''
Created on 2017-07-25 11:58

@ product name : PyCharm Community Edition

@ author : yoda
'''


# 데이터 해당차원에 0이나 1로 채워 넣은 함수
# ones(크기) : 해당하는 크기의 배열에 1로 데이터를 채워서 처리할 때

import numpy as np

a = np.ones(10)
print(a)    # [ 1.  1.  1.  1.  1.  1.  1.  1.  1.  1.]


# 2차원의 배열을 만들 때 tuple 형식(5, 5)
## zeros()는 데이터 0으로 입력 처리
a2 = np.zeros((5, 5))
print(a2)
# [[ 0.  0.  0.  0.  0.]
#  [ 0.  0.  0.  0.  0.]
#  [ 0.  0.  0.  0.  0.]
#  [ 0.  0.  0.  0.  0.]
#  [ 0.  0.  0.  0.  0.]]


# eye(행렬의 갯수, dtype=데이터형식)
# dtype = int : 해당 행렬에 대각선으로 데이터를 입력된 형식이 나타난다.

a3 = np.eye(5, dtype=int)
print(a3)
# [[1 0 0 0 0]
#  [0 1 0 0 0]
#  [0 0 1 0 0]
#  [0 0 0 1 0]
#  [0 0 0 0 1]]

# 대각선 데이터를 한행 올릴 때는 k = 올릴 행의 갯수
# 대각선 데이터를 한행 내릴 때는 k = - 내릴 행의 갯수

a4 = np.eye(5, k=2)
print(a4)
# [[ 0.  0.  1.  0.  0.]
#  [ 0.  0.  0.  1.  0.]
#  [ 0.  0.  0.  0.  1.]
#  [ 0.  0.  0.  0.  0.]
#  [ 0.  0.  0.  0.  0.]]

a5 = np.eye(5, k=-1)
print(a5)
# [[ 0.  0.  0.  0.  0.]
#  [ 1.  0.  0.  0.  0.]
#  [ 0.  1.  0.  0.  0.]
#  [ 0.  0.  1.  0.  0.]
#  [ 0.  0.  0.  1.  0.]]

# 0~25까지 데이터를 나타내고 5행5열의 형태로 처리
a = np.arange(25).reshape(5, 5)
print(a)

# 해당 배열의 대각행렬 데이터 출력하기
# diag(x)

diag1 = np.diag(a)
print(diag1)   # [ 0  6 12 18 24]

# 대각행렬에서 행의 +1 데이터 출력하기
diag2 = np.diag(a, k=1)
print(diag2)    # [ 1  7 13 19]

# 대각행렬에서 행의 -1 데이터 출력하기
diag3 = np.diag(a, k=-1)
print(diag3)    # [ 5 11 17 23]



